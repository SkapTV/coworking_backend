// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Empresas {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  nome         String
  descricaoEmp String
  thumbnailEmp String
  projetos     Projetos[]
  parceiros    Parceiros[]
}

model Projetos {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  descricao String
  thumbnail String
  demos     Demos[]
  showUp    ShowUp[]
  empresaId String   @db.ObjectId
  empresa   Empresas @relation(fields: [empresaId], references: [id])
}

model Demos {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  projetoId String   @db.ObjectId
  projeto   Projetos @relation(fields: [projetoId], references: [id])
}

model ShowUp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  projetoId String   @db.ObjectId
  projeto   Projetos @relation(fields: [projetoId], references: [id])
}

model Parceiros {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  nome       String
  thumbnail  String
  descricao  String
  Empresas   Empresas @relation(fields: [empresasId], references: [id])
  empresasId String   @db.ObjectId
}

model Usuario {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  nome   String
  email  String
  senha  String
  sessao Sessao[]
  Role   Role     @default(USER)
}

enum Role {
  ADM
  USER
  EMPRESAJR
  COWORKING
}

model Sessao {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  token        String
  usuarioId    String
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}
